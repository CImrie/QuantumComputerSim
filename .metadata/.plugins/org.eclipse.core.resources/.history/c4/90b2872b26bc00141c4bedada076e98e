package core;

// @author Ben Crabbe
public class Qubit extends Complex {

	private Complex a, b;

	public Qubit() {
		Complex a = new Complex(0.0, 0.0);
		Complex b = new Complex(0.0, 0.0);
		this.setQubit(a, b);
	}

	public Qubit(Qubit original) {
		this.setQubit(original.getUp(), original.getDown());
	}

	public Qubit(Complex up, Complex down) {
		this.setQubit(up, down);
		if (up.normSquared() + down.normSquared() < 0.9999) {
			System.out.printf("Qubit not normalised!\n");
		}
	}

	public static Qubit NormQubit(Qubit original) {
		Complex up = original.getUp();
		Complex down = original.getDown();
		Complex Up = divide(up, (up.normSquared() + down.normSquared()));
		Complex Down = divide(down, (up.normSquared() + down.normSquared()));
		return new Qubit(Up, Down);
	}

	public void setQubit(Complex up, Complex down) {
		this.setUp(up);
		this.setDown(down);
	}

	public void set1(Complex up) {
		this.up = up;
	}

	public void set0(Complex down) {
		this.down = down;
	}

	public Complex get0() {
		return this.up;
	}

	public Complex get1() {
		return this.down;
	}

	@Override
	public String toString() {
		Complex up = this.getUp();
		Complex down = this.getDown();

		return "(" + up + ")| 0 > + (" + down + ")| 1 >";
	}

	
}
